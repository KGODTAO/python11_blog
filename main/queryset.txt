#все объекты

Category.objects.all()
SELECT * FROM category;
#один объект

Category.objects.get(id=5)
SELECT * FROM category Where id=5
DoesNotExist - когда объект не найден
MultipleObjectsReturned - когда get() возвращает несколько объектов


Category.objects.first()
SELECT * FROM category ORDER BY ... LIMIT 1;
Category.objects.order_by().last()
Category.objects.last()
SELECT * FROM category ORDER BY ... DESC LIMIT 1;

#фильтрация
Category.object.filter(name=...., slug=...)
SELECT * FROM category WHERE name=...AND slug=...;

Category.object.exclude(name=...)
SELECT * FROM category WHERE name <> ...;

#ограничение набора полей
name, description, image, slug, parent
only()
Category.objects.only('name', 'description')
SELECT name, description FROM category;

defer()
Category.objects.defer('name', 'description')
SELECT image, slug, parent FROM category;

#сортировка
order_by()
Category.objects.order_by('name')
SELECT * FROM category ORDER BY name;

Category.objects.order_by('-name')
SELECT * FROM category ORDER BY name DESC;

reverse()
Category.objects.all()
[obj1, obj2, obj3]

Category.objects.reverse()
[obj3, obj2, obj1]

values()
Category.objects.all()
[obj1, obj2, obj3]

Category.objects.values()
[{'name': 'Спорт', 'slug': 'sport'}, {'name': 'Музыка', slug:'music')

Category.objects.values('name', 'description')
[{'name': ...., 'description': ...} , {'name': ..., 'description':...}]

values_list()

Category.objects.values('name', 'description')
[('Sport', '....'), ('Музыка', '....')]

count()
Category.objects.count()
SELECT COUNT(*) FROM category;

#создание записей

category1 = Category()
category.save()

category2 = Category.objects.create(...)

#изменение записей

category1 = Category.objects.get(...)
category1.name = ...
category.save()

Category.objects.filter(...).update(...)

#удаление записей
category1 = Category.objects.get(....)
category1.delete()

Category.object.delete()
Category.objects.filter(...).delete()

Операторы (field lookups)

">"     gt
"<"     lt
"<="    lte
">="    gte

Category.objects.filter(date__gt=some_date)
SELECT * FROM category Where date > 'some_date';


Post.objects.filter(date=(2021, 05, 29))
SELECT * FROM post WHERE date = '2021-05-29'

LIKE, ILIKE

'a%'   startswith, istartwith
Category.objects.filter(name__istartwith='Apple')
Select * FROM category WHERE name ILIKE 'Apple';


'%a'   endswith, iendswith
Category.objects.filter(name__iendswith='Apple')
Select * FROM category WHERE name ILIKE '%Apple';

'%a%'  contains, icontains
Category.objects.filter(name__icontains='Apple')
Select * FROM category WHERE name ILIKE '%Apple%';

IN - in
Category.objects.filter(name__in=['Sport', 'Music'])
SELECT * FROM category WHERE name IN ('Sport', 'Music');

Between - range

Post.objects.filter(date__range=(start_date, end_date))
SELECT * FROM category WHERE date BETWEEN start_date AND end_date;


isnull

Model.objects.filter(image__isnull=True)
SELECT * FROM model WHERE image is NULL;

Model.objects.filter(image__isnull=False)
SELECT * FROM model WHERE image IS NOT NULL;





